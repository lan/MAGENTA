R.C = R.C)
#prepare the summary statistics for joint test using trait-specific score summary statistics
beta.sumstats.obj <- Get_beta_cov_UV(sumstats = sumstats, MAF = MAF, R.C = R.C, zeta.ret = zeta.ret, KA = KA,
test = "joint",
trait.list = paste0("Trait", 1:K))
source("/SFS/user/ctc/luolan2/MAGENTA/R/important.R")
rm(list = ls())
source("/home/luolan2/MAGENTA/R/sumstats.R")
source("/home/luolan2/MAGENTA/R/misc.R")
source("/home/luolan2/MAGENTA/R/other.R")
source("/home/luolan2/MAGENTA/R/important.R")
source("/home/luolan2/MAGENTA/R/MAGENTA.R")
source("/home/luolan2/MAGENTA/R/ACAT.R")
load("/home/luolan2/MAGENTA/data/rawdata.rda")
names(rawdata)
attach(rawdata)
head(dat)
head(geno.dat)
## start from the individual-level data
K <- 3
load("/home/luolan2/MAGENTA/data/sumstats_data.rda")
names(sumstats.dat)
attach(sumstats.dat)
str(common.sumstats)
zeta.ret <- Get_zeta(common.sumstats = common.sumstats, trait.list = paste("Trait", 1:K))
zeta.ret
str(sumstats) ## variant-level score summary statistics U and V as input data, generated by cal.sum, zero means that SNP is a non-polymorphic SNP for trait k and environmental group d
#prepare the summary statistics for joint test using trait-specific score summary statistics
beta.sumstats.obj <- Get_beta_cov_UV(sumstats = sumstats, MAF = MAF, R.C = R.C, zeta.ret = zeta.ret, KA = KA,
test = "joint",
trait.list = paste0("Trait", 1:K))
names(beta.sumstats.obj)
KA <- matrix(c(1, -0.03, 0.3, -0.03, 1, -0.535, 0.3, -0.535, 1), byrow = T, nrow = 3)
rownames(KA) <- colnames(KA) <- paste0("Trait", 1:K)
MAGENTA.joint.sumstats(beta.sumstats.obj = beta.sumstats.obj,
MAF,
KA = KA,
drugStruct = "AR1",
trait.list = paste0("Trait", 1:K),
drug.list = paste0("Drug", 0:1),
R.C = R.C)
MAGENTA.joint.sumstats <- function(beta.sumstats.obj, MAF, KA = NULL, drugStruct = NULL,
trait.list, drug.list,
R.C = NULL, cct = TRUE,
diffweight = FALSE,
threshold = 0.05,
weight.commonSNP = NULL,
pval.thres = 1,
rho.SNP = c(0, 0.5, 1),
rho.trait = c(0.5, 5, 1),
rho.drug = c(0, 0.5, 1),
weight.SNP = c(1, 25))
{
attach(beta.sumstats.obj)
## start from beta.est and beta.cov
D <- length(drug.list)
K <- length(trait.list)
m <- length(MAF)
snp.list <- names(MAF)
drug_trait <- expand.grid(trait = 1:K, drug = 1:D)
if (is.null(drugStruct)){
message("Assume the effects among environmental groups are independent")
lambda <- expand.grid(lambdaA = rho.trait, lambdaC = rho.SNP, lambdaD = 0)
}else if(drugStruct == "AR1") {
message("Assume the first-order autoregressive structure for the effects among environmental groups")
lambda <- expand.grid(lambdaA = rho.trait, lambdaC = rho.SNP, lambdaD = rho.drug)
}
if (is.null(KA)) {
message("Without the input of genetic correlation information, an exchangeable correlation structure among traits is assumed in MAGENTA.")
KA <- diag(K)
}
message("Conducting MAGENTA analysis ...")
if(diffweight) {
message("Use different weights for rare and common variants:")
if(is.null(weight.commonSNP)){
message(paste0("No input of weight for common variants, use the default weight of dbeta(MAF,0.5,0.5) for common variants and dbeta(MAF,", paste0(weight.SNP, collapse = ","),  ") for rare variants"))
weight.commonSNP <- c(0.5, 0.5)
}else{
message(paste0("Use the weight of dbeta(MAF,", paste0(weight.SNP, collapse = ","),  ") for rare variants and the weight of dbeta(MAF,", paste0(weight.commonSNP, collapse = ","), ") for common variants"))
}
common.SNP <- which(MAF >= threshold)
}
KC <- diag(m)
MAF <- MAF[order(match(names(MAF), snp.list))]
if(diffweight) {
diag.tmp <- numeric(m)
if(length(common.SNP) != 0) {
diag.tmp[common.SNP] <- Beta.Weights(MAF[common.SNP], weights.beta = weight.commonSNP)
diag.tmp[-common.SNP] <- Beta.Weights(MAF[-common.SNP], weights.beta = weight.SNP)
}else{
diag.tmp <- Beta.Weights(MAF, weights.beta = weight.SNP)
}
}else{
diag.tmp <- Beta.Weights(MAF, weights.beta = weight.SNP) #weights matrix for SNPs
}
diag(KC) <- diag.tmp
WA <- diag(K)
JC <- matrix(1, nrow = m, ncol = m)
p.obs <- NULL
for (ii in 1:nrow(lambda)) {
lambdaA <- lambda[ii, 1]
A <- WA %*% apply(KA, 2, combMTAR, rho = lambdaA) %*% WA
lambdaC <- lambda[ii, 2]
C <- diag(KC) %*% t(diag(KC)) * ((1 - lambdaC) * diag(m) + lambdaC * JC)
B_D <- ar1_cor(D, lambda[ii, 3])
B.all <- kronecker(B_D, kronecker(A, C))
R <- chol(B.all, pivot = TRUE)
r <- attr(R, "rank")
if (r < nrow(B.all))
R[(r + 1):nrow(B.all), (r + 1):nrow(B.all)] <- 0
oo <- order(attr(R, "pivot"))
unpivQ <- R[, oo]
rho <- try(Get_Lambda(unpivQ %*% Sigma.inv %*% t(unpivQ)), silent = TRUE)
# rho <- try(Get_Lambda(unpivQ %*% MASS::ginv(beta.sumstats$beta.cov) %*% t(unpivQ)), silent = TRUE)
if (!inherits(rho, "try-error")) {
part1 <-t(U.all) %*% U.inv %*%V.diag.all
Q <- as.numeric(part1 %*% B.all %*% t(part1))
pvalues <- Get_PValue.Lambda(rho, Q)$p.value
# print(pvalues)
p.obs <- c(p.obs, pvalues)
}
}
if(cct) {
MAGENTA.cct.p <- list(p = ACAT(p.obs[which(p.obs < pval.thres)]),
rhoS.min = lambda[which.min(p.obs), 2],
rhoT.min = lambda[which.min(p.obs), 1],
rhoE.min = lambda[which.min(p.obs), 3])
}else{
MAGENTA.cct.p <- list(p = p.obs,
rhoS.min = lambda[which.min(p.obs), 2],
rhoT.min = lambda[which.min(p.obs), 1],
rhoE.min = lambda[which.min(p.obs), 3])
}
return(MAGENTA.cct.p)
}
load("/home/luolan2/MAGENTA/data/sumstats_data.rda")
names(sumstats.dat)
attach(sumstats.dat)
str(common.sumstats)
zeta.ret <- Get_zeta(common.sumstats = common.sumstats, trait.list = paste("Trait", 1:K))
zeta.ret
str(sumstats) ## variant-level score summary statistics U and V as input data, generated by cal.sum, zero means that SNP is a non-polymorphic SNP for trait k and environmental group d
#prepare the summary statistics for joint test using trait-specific score summary statistics
beta.sumstats.obj <- Get_beta_cov_UV(sumstats = sumstats, MAF = MAF, R.C = R.C, zeta.ret = zeta.ret, KA = KA,
test = "joint",
trait.list = paste0("Trait", 1:K))
names(beta.sumstats.obj)
KA <- matrix(c(1, -0.03, 0.3, -0.03, 1, -0.535, 0.3, -0.535, 1), byrow = T, nrow = 3)
rownames(KA) <- colnames(KA) <- paste0("Trait", 1:K)
MAGENTA.joint.sumstats(beta.sumstats.obj = beta.sumstats.obj,
MAF,
KA = KA,
drugStruct = "AR1",
trait.list = paste0("Trait", 1:K),
drug.list = paste0("Drug", 0:1),
R.C = R.C)
source("/SFS/user/ctc/luolan2/MAGENTA/R/important.R")
MAGENTA.joint.sumstats(beta.sumstats.obj = beta.sumstats.obj,
MAF,
KA = KA,
drugStruct = "AR1",
trait.list = paste0("Trait", 1:K),
drug.list = paste0("Drug", 0:1),
R.C = R.C)
beta.sumstats.obj$beta.est
source("/SFS/user/ctc/luolan2/MAGENTA/R/important.R")
MAGENTA.joint.sumstats(beta.sumstats.obj = beta.sumstats.obj,
MAF,
KA = KA,
drugStruct = "AR1",
trait.list = paste0("Trait", 1:K),
drug.list = paste0("Drug", 0:1),
R.C = R.C)
beta.cov <- beta.sumstats.obj$beta.cov
dim(beta.cov)
source("/SFS/user/ctc/luolan2/MAGENTA/R/important.R")
MAGENTA.joint.sumstats(beta.sumstats.obj = beta.sumstats.obj,
MAF,
KA = KA,
drugStruct = "AR1",
trait.list = paste0("Trait", 1:K),
drug.list = paste0("Drug", 0:1),
R.C = R.C)
MAGENTA.joint <- function(sumstats, MAF, KA = NULL, drugStruct = NULL,
# diagTrans = FALSE,
R.C = NULL, cct = TRUE,
diffweight = FALSE,
threshold = 0.05,
weight.commonSNP = NULL,
zeta = NULL, pval.thres = 1,
rho.SNP = c(0, 0.5, 1),
rho.trait = c(0.5, 5, 1),
rho.drug = c(0, 0.5, 1),
weight.SNP = c(1, 25))
{
# print(paste0("Start analysis at ", Sys.time()))
D <- length(sumstats)
K <- length(sumstats[[1]])
m <- length(MAF)
snp.list <- names(MAF)
drug_trait <- expand.grid(trait = 1:K, drug = 1:D)
if (is.null(drugStruct)){
message("Assume the effects among environmental groups are independent")
lambda <- expand.grid(lambdaA = rho.trait, lambdaC = rho.SNP, lambdaD = 0)
}else if(drugStruct == "AR1") {
message("Assume the first-order autoregressive structure for the effects among environmental groups")
lambda <- expand.grid(lambdaA = rho.trait, lambdaC = rho.SNP, lambdaD = rho.drug)
}
if (is.null(KA)) {
message("Without the input of genetic correlation information, an exchangeable correlation structure among traits is assumed in MTAR.")
KA <- diag(K)
}
if (is.null(zeta)) {
message("Without the input of zeta, MAGENTA assumes there are no overlap samples in the dataset.")
zeta <- list()
for(d in 1:D) {
zeta[[d]] <- diag(K)
}
}
message("Conducting MAGENTA analysis ...")
if(diffweight) {
message("Use different weights for rare and common variants:")
if(is.null(weight.commonSNP)){
message(paste0("No input of weight for common variants, use the default weight of dbeta(MAF,0.5,0.5) for common variants and dbeta(MAF,", paste0(weight.SNP, collapse = ","),  ") for rare variants"))
weight.commonSNP <- c(0.5, 0.5)
}else{
message(paste0("Use the weight of dbeta(MAF,", paste0(weight.SNP, collapse = ","),  ") for rare variants and the weight of dbeta(MAF,", paste0(weight.commonSNP, collapse = ","), ") for common variants"))
}
common.SNP <- which(MAF >= threshold)
}
#
#   # recover R.C from input of V, so MAGENTA doesn't need the extra input of R.C
#   if(is.null(R.C)) {
#     R.C <- recoverLD(sumstats = sumstats, snp.list = snp.list)
#     message("The LD matrix is not provided and recovered from the summary statistics V.")
#   }
obs.stat <- list()
U.complete <- list()
for (d in 1:D) {
U.temp <- list()
obs.stat.temp <- list()
for (k in 1:K) {
U.bytrait <- numeric(length(snp.list))
V.bytrait <- matrix(0, length(snp.list), length(snp.list))
names(U.bytrait) <- snp.list
colnames(V.bytrait) <- rownames(V.bytrait) <- snp.list
order1 <- order(match(names(sumstats[[d]][[k]]$U)[names(sumstats[[d]][[k]]$U) %in% snp.list], snp.list))
order2 <- which(snp.list %in% names(sumstats[[d]][[k]]$U))
U.bytrait[order2] <- sumstats[[d]][[k]]$U[order1]
V.bytrait[order2, order2] <- sumstats[[d]][[k]]$V[order1, order1]
obs.stat.temp[[k]] <- list(U = U.bytrait, V = V.bytrait)
U.temp[[k]] <- U.bytrait
}
obs.stat[[d]] <- obs.stat.temp
U.complete[[d]] <- U.temp
}
obs.stat1 <- obs.stat
if (!is.null(zeta)) {
V.sqrt <- list() #contain the square root of all D by K covariance matrix V.
for(d in 1:D) {
V.sqrt.temp <- list()
for(k in 1:K) {
V.sqrt.temp[[k]] <- diag(length(obs.stat1[[d]][[k]]$U))
diag(V.sqrt.temp[[k]]) <- sqrt(diag(obs.stat1[[d]][[k]]$V))
}
V.sqrt[[d]] <- V.sqrt.temp
}
trait.ind <- expand.grid(row.ind = 1:K, column.ind = 1:K)
U.cov.bydrug <- list()
V.diag.bydrug <- list()
for(d in 1:D) {
Ucov <- list()
for (iter in 1:nrow(trait.ind)) {
k1 <- trait.ind[iter, 1]
k2 <- trait.ind[iter, 2]
Ucov[[iter]] <- diag(V.sqrt[[d]][[k1]])  %*%  t(diag(V.sqrt[[d]][[k2]])) * R.C
# if(!diagTrans) {
#   if(k1 == k2) { #diagonal matrices
#     Ucov[[iter]] <- obs.stat1[[d]][[k1]]$V
#   }
# }
}
U.cov <- NULL
mlist <- list()
for (col_id in 1:K) {
diag.ind <- which(trait.ind$column.ind == col_id & trait.ind$row.ind == col_id)
U.cov.col <- NULL
index <- which(trait.ind$column.ind == col_id)
row_id <- trait.ind[index, 1]
for (iter in 1:length(index)) {
U.cov.col <- rbind(U.cov.col, as.matrix(zeta[[d]][row_id[iter], col_id] * Ucov[[index[iter]]]))
}
U.cov <- cbind(U.cov, U.cov.col)
mlist[[col_id]] <- Ucov[[diag.ind]]
}
U.cov <- as.matrix(U.cov)
U.cov.bydrug[[d]] <- U.cov
V.diag.bydrug[[d]] <- as.matrix(Matrix::bdiag(mlist))
}
U.cov.all <- as.matrix(Matrix::bdiag(U.cov.bydrug))
U.inv <- try(MASS::ginv(U.cov.all), silent = T)
# print(paste0("Done inverse of U at ", Sys.time()))
if (inherits(U.inv, "try-error")) {
warning("The covariance matrix of U is exactly singular, MASS:ginv() function doesn't work here.")
MAGENTA.cct.p <- list(p = NA, rho1.min = NA, rho2.min = NA,rho3.min = NA)
return(MAGENTA.cct.p)
}
V.diag.all <- as.matrix(Matrix::bdiag(V.diag.bydrug))
Sigma.inv <- V.diag.all %*% U.inv %*% V.diag.all #inverse of covariance matrix of beta
} else {
mlist <- list()
for (DT.ind in 1:nrow(drug_trait)) {
d <- drug_trait[DT.ind, 2]
k <- drug_trait[DT.ind, 1]
mlist[[DT.ind]] <- obs.stat1[[d]][[k]]$V
}
U.cov.all <- V.diag.all <- Sigma.inv <- as.matrix(Matrix::bdiag(mlist))
U.inv <- try(MASS::ginv(U.cov.all), silent = T)
if (inherits(U.inv, "try-error")) {
warning("The covariance matrix of U is exactly singular, MASS:ginv() function doesn't work here.")
MAGENTA.cct.p <- list(p = NA, rho1.min = NA, rho2.min = NA, rho3.min = NA)
return(MAGENTA.cct.p)
}
}
U.all <- NULL
for (DT.ind in 1:nrow(drug_trait)) {
d <- drug_trait[DT.ind, 2]
k <- drug_trait[DT.ind, 1]
tmp <- obs.stat1[[d]][[k]]$U
names(tmp) <- paste0(names(obs.stat1[[d]][[k]]$U), ":", k, ":",d)
U.all <- c(U.all, tmp)
}
U.all <- as.matrix(U.all)
KC <- diag(m)
MAF <- MAF[order(match(names(MAF), snp.list))]
if(diffweight) {
diag.tmp <- numeric(m)
if(length(common.SNP) != 0) {
diag.tmp[common.SNP] <- Beta.Weights(MAF[common.SNP], weights.beta = weight.commonSNP)
diag.tmp[-common.SNP] <- Beta.Weights(MAF[-common.SNP], weights.beta = weight.SNP)
}else{
diag.tmp <- Beta.Weights(MAF, weights.beta = weight.SNP)
}
}else{
diag.tmp <- Beta.Weights(MAF, weights.beta = weight.SNP) #weights matrix for SNPs
}
diag(KC) <- diag.tmp
WA <- diag(K)
JC <- matrix(1, nrow = m, ncol = m)
p.obs <- NULL
for (ii in 1:nrow(lambda)) {
# print(paste0("Start grid", ii, " at ", Sys.time()))
lambdaA <- lambda[ii, 1]
A <- WA %*% apply(KA, 2, combMTAR, rho = lambdaA) %*% WA
lambdaC <- lambda[ii, 2]
C <- diag(KC) %*% t(diag(KC)) * ((1 - lambdaC) * diag(m) + lambdaC * JC)
B_D <- ar1_cor(D, lambda[ii, 3])
B.all <- kronecker(B_D, kronecker(A, C))
R <- chol(B.all, pivot = TRUE)
r <- attr(R, "rank")
if (r < nrow(B.all))
R[(r + 1):nrow(B.all), (r + 1):nrow(B.all)] <- 0
oo <- order(attr(R, "pivot"))
unpivQ <- R[, oo]
rho <- try(Get_Lambda(unpivQ %*% Sigma.inv %*% t(unpivQ)), silent = TRUE)
if (!inherits(rho, "try-error")) {
part1 <-t(U.all) %*% U.inv %*% V.diag.all
Q <- as.numeric(part1 %*% B.all %*% t(part1))
pvalues <- Get_PValue.Lambda(rho, Q)$p.value
p.obs <- c(p.obs, pvalues)
}
}
if(cct) {
MAGENTA.cct.p <- list(p = ACAT(p.obs[which(p.obs < pval.thres)]), rho1.min = lambda[which.min(p.obs), 2],
rho2.min = lambda[which.min(p.obs), 1],
rho3.min = lambda[which.min(p.obs), 3])
}else{
MAGENTA.cct.p <- list(p = p.obs, rho1.min = lambda[which.min(p.obs), 2],
rho2.min = lambda[which.min(p.obs), 1],
rho3.min = lambda[which.min(p.obs), 3])
}
return(MAGENTA.cct.p)
}
MAGENTA.joint(sumstats = sumstats, MAF = MAF, KA = KA, drugStruct = "AR1", R.C = R.C, zeta = zeta.ret$zeta.joint)
beta.sumstats.obj$beta.est
beta.sumstats.obj$beta.cov
k <- 1
beta.sumstats.obj$beta.est
rownames(beta.sumstats.obj$beta.est)
grep(rownames(beta.sumstats.obj$beta.est), paste0(":", k, ":"))
grep( paste0(":", k, ":"), rownames(beta.sumstats.obj$beta.est))
k
beta.sumstats.obj$beta.est[grep( paste0(":", k, ":"), rownames(beta.sumstats.obj$beta.est)),]
selSNP <- grep( paste0(":", k, ":"), rownames(beta.sumstats.obj$beta.est))
selSNP <- grep( paste0(":", k, ":"), rownames(beta.sumstats.obj$beta.est))
beta.sumstats.obj$beta.est[selSNP, ]
beta.sumstats.ST <- list(beta.est = beta.sumstats.obj$beta.est[selSNP, , drop = FALSE],
beta.cov = beta.sumstats.obj$beta.cov[selSNP, selSNP, drop = FALSE])
beta.sumstats.ST
MAGENTA.joint.sumstats(beta.sumstats.obj = beta.sumstats.ST,
MAF = MAF,
KA = matrix(1),
R.C = R.C,
drugStruct = drugStruct,
trait.list = trait.list[k],
drug.list = drug.list,
cct = cct,
diffweight = diffweight,
threshold = threshold,
weight.commonSNP = weight.commonSNP,
pval.thres = pval.thres,
rho.SNP = rho.SNP, rho.trait = 1,
rho.drug = rho.drug, weight.SNP = weight.SNP
)
trait.list
trait.list = paste0("Trait", 1:K)
drug.list = paste0("Drug", 0:1)
MAGENTA.joint.sumstats(beta.sumstats.obj = beta.sumstats.ST,
MAF = MAF,
KA = matrix(1),
R.C = R.C,
drugStruct = "AR1",
trait.list = trait.list[k],
drug.list = drug.list,
rho.trait = 1)
sumstats.bytrait <- list()
zeta.list1 <- list()
for(k in 1:K) {
sumstats.bytrait.tmp <- list()
for(d in 1:D) {
zeta.list1[[d]] <- matrix(1)
sumstats.bytrait.tmp[[d]] <- list(list(U = sumstats[[d]][[k]]$U, V = sumstats[[d]][[k]]$V))
}
sumstats.bytrait[[k]] <- sumstats.bytrait.tmp
}
D
D <- 2
K
sumstats.bytrait <- list()
for(k in 1:K) {
sumstats.bytrait.tmp <- list()
for(d in 1:D) {
sumstats.bytrait.tmp[[d]] <- list(list(U = sumstats[[d]][[k]]$U, V = sumstats[[d]][[k]]$V))
}
sumstats.bytrait[[k]] <- sumstats.bytrait.tmp
}
sapply(zeta.ret$zeta.joint, function(x) x[k, k, drop = FALSE])
lapply(zeta.ret$zeta.joint, function(x) x[k, k, drop = FALSE])
MAGENTA.joint(sumstats = sumstats.bytrait[[k]],
MAF = MAF, KA = matrix(1),
# diagTrans = diagTrans,
R.C = R.C, zeta = lapply(zeta.ret$zeta.joint, function(x) x[k, k, drop = FALSE]),
drugStruct = drugStruct,
rho.drug = c(0, 0.5, 1), cct = cct,
rho.trait = 1,
diffweight = diffweight)
MAGENTA.joint(sumstats = sumstats.bytrait[[k]],
MAF = MAF, KA = matrix(1),
# diagTrans = diagTrans,
R.C = R.C, zeta = lapply(zeta.ret$zeta.joint, function(x) x[k, k, drop = FALSE]),
drugStruct = "AR1",
rho.drug = c(0, 0.5, 1),
rho.trait = 1,
diffweight = diffweight)
MAGENTA.joint(sumstats = sumstats.bytrait[[k]],
MAF = MAF, KA = matrix(1),
# diagTrans = diagTrans,
R.C = R.C, zeta = lapply(zeta.ret$zeta.joint, function(x) x[k, k, drop = FALSE]),
drugStruct = "AR1",
rho.drug = c(0, 0.5, 1),
rho.trait = 1)
MAGENTA.joint.sumstats(beta.sumstats.obj = beta.sumstats.ST,
MAF = MAF,
KA = matrix(1),
R.C = R.C,
drugStruct = "AR1",
trait.list = trait.list[k],
drug.list = drug.list,
rho.trait = 1)
k
k <- 1
MAGENTA.joint(sumstats = sumstats.bytrait[[k]],
MAF = MAF, KA = matrix(1),
# diagTrans = diagTrans,
R.C = R.C, zeta = lapply(zeta.ret$zeta.joint, function(x) x[k, k, drop = FALSE]),
drugStruct = "AR1",
rho.drug = c(0, 0.5, 1),
rho.trait = 1)
singletrait.p <- numeric(K)
source("/SFS/user/ctc/luolan2/MAGENTA/R/important.R")
source("/SFS/user/ctc/luolan2/MAGENTA/R/important.R")
MAGENTA.joint.4cat.sumstats <- function(beta.sumstats.obj = beta.sumstats.obj,
MAF = MAF, KA = KA,
drugStruct = "AR1",
trait.list, drug.list,
output = "MTMV",
R.C = R.C)
}
source("/SFS/user/ctc/luolan2/MAGENTA/R/important.R")
MAGENTA.joint.4cat.sumstats(beta.sumstats.obj = beta.sumstats.obj,
MAF = MAF, KA = KA,
drugStruct = "AR1",
trait.list, drug.list,
output = "MTMV",
R.C = R.C)
source("/SFS/user/ctc/luolan2/MAGENTA/R/important.R")
MAGENTA.joint.4cat.sumstats(beta.sumstats.obj = beta.sumstats.obj,
MAF = MAF, KA = KA,
drugStruct = "AR1",
trait.list, drug.list,
output = "MTMV",
R.C = R.C)
